---
- name: Copy uprofile.sh to /etc/profile.d
  copy:
    src: start_profile.sh
    dest: /etc/profile.d/start_profile.sh
    mode: 0644
    group: root
    owner: root
  become: yes

- name: Create cfg dirs
  file:
    path: "/home/{{main_user}}/{{item}}"
    state: directory
    mode: 0755
    group: users
    owner: "{{main_user}}"
  loop:
    - .local/share
    - .local/share/zsh
    - .local/share/rofi
    - .local/share/vscode
    - .local/share/applications
    - .local/share/firefox/.mozilla/firefox/rean.default-release
    - .cache
    - .cache/zsh
    - .config
    - .config/lib
    - .config/pulse
    - .config/Code/User
    - .config/autostart-scripts
    - .config/sublime-text-3/Packages/User/
    - tmp
    - downloads
    - projects/test
    - projects/work
    - projects/external
    - projects/venv

- name: Clone or update dotfile repositories
  update_git:
    repo: git@github.com:ReanGD/{{item.repo}}
    dest: /home/{{main_user}}/projects/home/{{item.dest}}
  loop: "{{ dotfiles_repositories_map }}"

- name: Create links for dotfiles
  link:
    src: /home/{{main_user}}/projects/home/dotfiles/{{item.src}}
    dst: /home/{{main_user}}/{{item.dst}}
  loop: "{{ dotfiles_path_map }}"

- name: Create links for other items
  link:
    src: "{{item.src}}"
    dst: /home/{{main_user}}/{{item.dst}}
  when: gui!="none"
  loop: "{{ others_path_map }}"

# ansible-vault decrypt secrets.yml
# ansible-vault encrypt secrets.yml
- name: Include vars git user configs
  include_vars:
    file: secrets.yml

- name: Create git user configs
  copy:
    content: "{{item.key}}"
    dest: "/home/{{main_user}}/.config/git/{{item.name}}"
    mode: 0644
    group: users
    owner: "{{main_user}}"
  loop:
    - { key: "{{ git_user_home }}", name: "user.home" }
    - { key: "{{ git_user_work }}", name: "user.work" }
  loop_control:
    label: "{{ item.name }}"

- include: cloud.yml
  when: gui!="none"

- include: doublecmd.yml
  when: gui!="none"

- name: Update desktop database
  shell: update-desktop-database ~/.local/share/applications
  when: gui!="none"
  changed_when: false
