---
- name: Install iwd package
  pkg_manager:
    name: iwd
    command: install
  become: true
  become_user: "{{ install_user }}"
  when: '"smd_wireless" in network_type.split(",")'

- name: Copy systemd-networkd configuration for modern interface
  ansible.builtin.copy:
    src: wired.network
    dest: /etc/systemd/network/10-wired.network
    group: root
    owner: root
    mode: "0644"
  become: true
  when: '"smd_wired" in network_type.split(",")'

- name: Copy systemd-networkd configuration for old interface
  ansible.builtin.copy:
    src: wired-old.network
    dest: /etc/systemd/network/20-wired-old.network
    group: root
    owner: root
    mode: "0644"
  become: true
  when: '"smd_wired" in network_type.split(",")'

- name: Copy systemd-networkd configuration for wireless interface
  ansible.builtin.copy:
    src: wireless.network
    dest: /etc/systemd/network/20-wireless.network
    group: root
    owner: root
    mode: "0644"
  become: true
  when: '"smd_wireless" in network_type.split(",")'

- name: Enable service systemd-networkd
  ansible.builtin.service:
    name: systemd-networkd.service
    enabled: true
  become: true
  when: is_chroot

- name: Enable ans start service systemd-networkd
  ansible.builtin.service:
    name: systemd-networkd.service
    enabled: true
    state: started
  become: true
  when: is_chroot

- name: Enable service iwd
  ansible.builtin.service:
    name: iwd.service
    enabled: true
  become: true
  when: 'is_chroot and "smd_wireless" in network_type.split(",")'

- name: Enable ans start service iwd
  ansible.builtin.service:
    name: iwd.service
    enabled: true
    state: started
  become: true
  when: 'not is_chroot and "smd_wireless" in network_type.split(",")'
