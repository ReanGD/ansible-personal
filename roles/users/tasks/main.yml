---
# ansible-vault decrypt secrets.yml
# ansible-vault encrypt secrets.yml
- name: Include vars passwords
  include_vars:
    file: secrets.yml

- name: Find docker group
  command: getent group docker
  register: reg_exists_docker_group
  changed_when: false
  failed_when: reg_exists_docker_group.rc == 1

- name: Set docker group exists
  set_fact:
    docker_group: ",docker"
  when: reg_exists_docker_group.rc == 0

- name: Set docker group not exists
  set_fact:
    docker_group: ""
  when: reg_exists_docker_group.rc != 0

- name: Find libvirt group
  command: getent group libvirt
  register: reg_exists_libvirt_group
  changed_when: false
  failed_when: reg_exists_libvirt_group.rc == 1

- name: Set libvirt group exists
  set_fact:
    libvirt_group: ",libvirt"
  when: reg_exists_libvirt_group.rc == 0

- name: Set libvirt group not exists
  set_fact:
    libvirt_group: ""
  when: reg_exists_libvirt_group.rc != 0

- name: Create group "i2c"
  group:
    name: i2c
    state: present
  become: true

- name: Change root password for home
  user:
    name: root
    append: false
    password: "{{ root_user_password }}"
  when: hostname_id != "worknote"
  become: true

- name: Change root password for work
  user:
    name: root
    append: false
    password: "{{ work_user_password }}"
  when: hostname_id == "worknote"
  become: true

- name: Create main user for home
  user:
    name: "{{ main_user }}"
    append: false
    create_home: true
    group: users
    groups: video,audio,storage,power,uucp,i2c{{ docker_group }}{{ libvirt_group }}
    password: "{{ main_user_password }}"
  when: hostname_id != "worknote" and hostname_id != "vdsina"
  become: true

- name: Create main user for work
  user:
    name: "{{ main_user }}"
    append: false
    create_home: true
    group: users
    groups: video,audio,storage,power,uucp,i2c{{ docker_group }}{{ libvirt_group }}
    password: "{{ work_user_password }}"
  when: hostname_id == "worknote"
  become: true

- name: Create main user for vdsina
  user:
    name: "{{ main_user }}"
    append: false
    create_home: true
    group: users
    groups: video,audio,uucp,i2c
    password: "{{ work_user_password }}"
  when: hostname_id == "vdsina"
  become: true

- name: Create dop user
  user:
    name: "{{ dop_user }}"
    append: false
    create_home: true
    group: users
    groups: video,audio,storage,power,i2c
    password: "{{ dop_user_password }}"
    uid: 1001
  when: add_dop_user
  become: true

- name: Create install_user user
  user:
    name: "{{ install_user }}"
    append: false
    create_home: true
    group: wheel
    uid: 1002
  when: distro == "arch" or distro == "archarm"
  become: true

- name: Configure sudoers
  template:
    src: sudoers
    dest: /etc/sudoers
    mode: "0440"
    group: root
    owner: root
  become: true

- name: Remove the user 'alarm'
  user:
    name: alarm
    state: absent
    remove: true
  become: true
