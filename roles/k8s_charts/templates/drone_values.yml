env:
  TZ: Europe/Moscow

podSecurityContext:
  runAsUser: 1000
  fsGroup: 0

config:
  DRONE_CLEANUP_DEADLINE_PENDING: 24h
  DRONE_CLEANUP_DEADLINE_RUNNING: 24h
  DRONE_CRON_INTERVAL: 10m
  DRONE_GITHUB_CLIENT_SECRET: {{ drone_github_client_secret }}
  DRONE_GITHUB_CLIENT_ID: {{ drone_github_client_id }}
  DRONE_RPC_SECRET: {{ drone_rpc_secret }}
  DRONE_SERVER_HOST: {{ ci_domain }}
  DRONE_SERVER_PROTO: {{ drone_web_hook_proto }}
  DRONE_WEBHOOK_ENDPOINT: "{{ drone_web_hook_proto }}://{{ ci_domain }}{{ drone_web_hook_path }}"
  DRONE_WEBHOOK_SECRET: {{ drone_webhook_secret }}

service:
  type: ClusterIP
  port: {{ drone_service_port }}

ingress:
  enabled: true
  className: ""
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.middlewares: web-oauth@kubernetescrd
  hosts:
  - host: {{ ci_domain }}
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls:
  - secretName: {{ cert_secret }}
    hosts:
    - {{ ci_domain }}

persistence:
  existingClaim: drone
