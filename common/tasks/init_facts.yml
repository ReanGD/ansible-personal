---
- name: Custom setup
  setup:
    gather_subset:
      - '!all'
      - '!any'

- name: Set common facts
  set_fact:
    main_user: rean
    install_user: aur_builder
    is_chroot: "{{ is_chroot_param }}"
    root_dir: "{{ inventory_dir }}"
    packages_dir: "{{ inventory_dir }}/common/files"

- name: Find board uuid for x86_64
  shell: cat /sys/class/dmi/id/product_name
  register: reg_product_name_x86_64
  changed_when: false
  become: yes
  when: ansible_facts['architecture'] == 'x86_64'

- name: Find board uuid for armv7l
  shell: grep -Po '^Serial\s*:\s*\K[[:xdigit:]]{16}' /proc/cpuinfo
  register: reg_product_name_armv7l
  changed_when: false
  when: ansible_facts['architecture'] == 'armv7l'

- name: Set archhost facts
  set_fact:
    add_dop_user: False
    network_type: "lan"
    hostname_id: "archhost"
    set_ssh_access_keys: True
    boot_ssd: True
    swap_size: 35
    swappiness: 1
    packages_file: "{{packages_dir}}/packages_desktop.py"
  when: ansible_facts['architecture'] == 'x86_64' and reg_product_name_x86_64.stdout == 'MS-7978'

- name: Set archnote facts (xiaomi)
  set_fact:
    add_dop_user: True
    network_type: "wifi"
    hostname_id: "archnote"
    set_ssh_access_keys: True
    boot_ssd: True
    swap_size: 8
    swappiness: 20
    packages_file: "{{packages_dir}}/packages_desktop.py"
  when: ansible_facts['architecture'] == 'x86_64' and reg_product_name_x86_64.stdout == 'TM1613'

- name: Set archsrv facts
  set_fact:
    add_dop_user: False
    network_type: "lan"
    hostname_id: "archsrv"
    set_ssh_access_keys: False
    boot_ssd: False
    swap_size: 35
    swappiness: 1
    packages_file: "{{packages_dir}}/packages_archsrv.py"
  when: ansible_facts['architecture'] == 'x86_64' and reg_product_name_x86_64.stdout == 'System Product Name'

- name: Set hass facts
  set_fact:
    add_dop_user: False
    network_type: "lan_old"
    hostname_id: "hass"
    set_ssh_access_keys: False
    boot_ssd: False
    swap_size: 1
    swappiness: 1
    packages_file: "{{packages_dir}}/packages_hass.py"
  when: ansible_facts['architecture'] == 'armv7l' and reg_product_name_armv7l.stdout == '00000000bed57e85'
