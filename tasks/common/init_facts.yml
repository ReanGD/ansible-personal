---
- name: Custom setup
  setup:
    gather_subset:
      - '!all'
      - '!any'

- name: Find distro name
  ansible.builtin.shell: cat /etc/os-release | grep "^ID=" | cut -d'=' -f2-
  register: reg_distro
  changed_when: false

- name: Set common facts
  ansible.builtin.set_fact:
    main_user: rean
    install_user: aur_builder
    is_chroot: "{{ is_chroot_param }}"
    root_dir: "{{ inventory_dir }}"
    packages_file: "{{ inventory_dir }}/files/common/packages.py"
    x86_64: "{{ ansible_facts['architecture'] == 'x86_64' }}"
    arm: "{{ ansible_facts['architecture'] == 'armv7l'}}"
    distro: "{{ reg_distro.stdout }}"
    os_family: "{{ 'arch' if reg_distro.stdout in ['arch', 'archarm'] else ('debian' if reg_distro.stdout == 'debian' else 'unknown') }}"

- name: Find board uuid for x86_64
  ansible.builtin.command: cat /sys/class/dmi/id/product_name
  register: reg_product_name_x86_64
  changed_when: false
  become: true
  when: x86_64

- name: Find board uuid for armv7l
  ansible.builtin.shell: grep -Po '^Serial\s*:\s*\K[[:xdigit:]]{16}' /proc/cpuinfo
  register: reg_product_name_armv7l
  changed_when: false
  when: arm

# distro: "arch"|"archarm"|"debian"
# boot: "nvram_write_enble"|"nvram_write_disable" and ["crypto_home", "textonly"]
# network_type: ["wired", "wired_old", "wireless", "systemd", "networkmanager"]
# ssh_access: ["all"|"github"|"none"]
# gui: "none" or ["lightdm", "awesome", "kde"]
# develop: "none" or ["std", "cpp", "python", "go", "rust", "rust3D", "sqlite", "android"]
# monitoring: "none" or ["std", "notebook", "hddtemp", "ups"]
# roles: "none" or ["font", "docker", "k8s", "automount", "web", "game", "messengers",
#                   "audio", "media", "office", "file_managers", "torrent", "bluetooth",
#                   "work", "repository", "rsync_server", "hass", "sing_box"]

- name: Set hass facts
  ansible.builtin.set_fact:
    hostname_id: "hass"
    boot: "nvram_write_enble"
    network_type: "wired_old,systemd"
    ssh_access: "github"
    gui: "none"
    develop: "none"
    monitoring: "std,hddtemp"
    roles: "rsync_server,hass"
    swap_size: 2048
    swappiness: 1
  when: arm and reg_product_name_armv7l.stdout == '00000000bed57e85'

- name: Set server facts
  ansible.builtin.set_fact:
    hostname_id: "server"
    boot: "nvram_write_disable"
    network_type: "wired,systemd"
    ssh_access: "github"
    gui: "none"
    develop: "none"
    monitoring: "std,hddtemp"
    roles: "k8s,automount"
    swap_size: 10240
    swappiness: 10
  when: x86_64 and reg_product_name_x86_64.stdout == 'MS-7978'

- name: Set master facts
  ansible.builtin.set_fact:
    hostname_id: "master"
    boot: "nvram_write_disable"
    network_type: "wired,wireless,systemd"
    ssh_access: "all"
    gui: "lightdm,awesome,kde"
    develop: "std,cpp,python,go,android"
    monitoring: "std,hddtemp"
    roles: "font,docker,automount,web,game,messengers,audio,media,office,file_managers,torrent,bluetooth,work,repository,sing_box"
    swap_size: 20480
    swappiness: 10
  when: x86_64 and reg_product_name_x86_64.stdout == 'MS-7C90'

- name: Set xnote facts (xiaomi)
  ansible.builtin.set_fact:
    hostname_id: "xnote"
    boot: "nvram_write_disable"
    network_type: "wired,wireless,systemd"
    ssh_access: "all"
    gui: "lightdm,awesome,kde"
    develop: "std,cpp,python,go"
    monitoring: "std,notebook,hddtemp"
    roles: "font,docker,automount,web,game,messengers,audio,media,office,file_managers,bluetooth,work,repository"
    swap_size: 8192
    swappiness: 20
  when: x86_64 and reg_product_name_x86_64.stdout == 'TM1613'

- name: Set worknote facts
  ansible.builtin.set_fact:
    hostname_id: "worknote"
    boot: "nvram_write_disable"
    network_type: "networkmanager"
    ssh_access: "all"
    gui: "lightdm,awesome,kde"
    develop: "std,cpp,python,go"
    monitoring: "std,notebook,hddtemp"
    roles: "font,docker,web,messengers,audio,media,office,file_managers,bluetooth,work,repository,sing_box"
    swap_size: 35840
    swappiness: 10
  when: x86_64 and reg_product_name_x86_64.stdout == '20WE'

- name: Set vdsina facts
  ansible.builtin.set_fact:
    hostname_id: "vdsina"
    boot: ""
    network_type: ""
    ssh_access: "none"
    gui: "none"
    develop: "none"
    monitoring: ""
    roles: ""
    swap_size: 0
    swappiness: 0
  when: x86_64 and reg_product_name_x86_64.stdout == 'KVM'

- name: Set KVM test facts
  ansible.builtin.set_fact:
    hostname_id: "kvmtest"
    boot: "nvram_write_disable,crypto_home,textonly"
    network_type: "wired,systemd"
    ssh_access: "none"
    gui: "lightdm,awesome,kde"
    develop: "std,cpp,python,go"
    monitoring: "std,hddtemp"
    roles: "font,docker,web,messengers,audio,media,office,file_managers,repository"
    swap_size: 4096
    swappiness: 1
  when: x86_64 and reg_product_name_x86_64.stdout == 'Standard PC (Q35 + ICH9, 2009)'
